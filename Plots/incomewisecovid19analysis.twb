<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid19incomewise' inline='true' name='federated.03b5e8k0ew5ut21b3oq6n11q9s52' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid19incomewise' name='textscan.0o7ylps1mocp3f16xbkki0ppc57p'>
            <connection class='textscan' directory='C:/Users/VISHNU BHAARATH/Desktop/COVID 19' filename='covid19incomewise.csv' password='' server='' />
          </named-connection>
          <named-connection caption='covid19deathincomewise' name='textscan.1vcoqo01bbk2da195k2yw1xi0dkn'>
            <connection class='textscan' directory='C:/Users/VISHNU BHAARATH/Desktop/COVID 19' filename='covid19deathincomewise.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[covid19incomewise.csv].[Code]' />
              <expression op='[covid19deathincomewise.csv].[Code]' />
            </expression>
          </clause>
          <relation connection='textscan.0o7ylps1mocp3f16xbkki0ppc57p' name='covid19incomewise.csv' table='[covid19incomewise#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Entity' ordinal='1' />
              <column datatype='string' name='Code' ordinal='2' />
              <column datatype='string' name='Date' ordinal='3' />
              <column datatype='integer' name='Total confirmed cases of COVID-19 (cases)' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.1vcoqo01bbk2da195k2yw1xi0dkn' name='covid19deathincomewise.csv' table='[covid19deathincomewise#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Entity' ordinal='1' />
              <column datatype='string' name='Code' ordinal='2' />
              <column datatype='string' name='Date' ordinal='3' />
              <column datatype='integer' name='Total confirmed deaths due to COVID-19 (deaths)' ordinal='4' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Code (covid19deathincomewise.csv)]' value='[covid19deathincomewise.csv].[Code]' />
          <map key='[Code]' value='[covid19incomewise.csv].[Code]' />
          <map key='[Date (covid19deathincomewise.csv)]' value='[covid19deathincomewise.csv].[Date]' />
          <map key='[Date]' value='[covid19incomewise.csv].[Date]' />
          <map key='[Entity (covid19deathincomewise.csv)]' value='[covid19deathincomewise.csv].[Entity]' />
          <map key='[Entity]' value='[covid19incomewise.csv].[Entity]' />
          <map key='[F1 (covid19deathincomewise.csv)]' value='[covid19deathincomewise.csv].[F1]' />
          <map key='[F1]' value='[covid19incomewise.csv].[F1]' />
          <map key='[Total confirmed cases of COVID-19 (cases)]' value='[covid19incomewise.csv].[Total confirmed cases of COVID-19 (cases)]' />
          <map key='[Total confirmed deaths due to COVID-19 (deaths)]' value='[covid19deathincomewise.csv].[Total confirmed deaths due to COVID-19 (deaths)]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid19incomewise.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[covid19incomewise.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[covid19incomewise.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[covid19incomewise.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid19incomewise.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total confirmed cases of COVID-19 (cases)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total confirmed cases of COVID-19 (cases)]</local-name>
            <parent-name>[covid19incomewise.csv]</parent-name>
            <remote-alias>Total confirmed cases of COVID-19 (cases)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid19deathincomewise.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (covid19deathincomewise.csv)]</local-name>
            <parent-name>[covid19deathincomewise.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity (covid19deathincomewise.csv)]</local-name>
            <parent-name>[covid19deathincomewise.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code (covid19deathincomewise.csv)]</local-name>
            <parent-name>[covid19deathincomewise.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Date (covid19deathincomewise.csv)]</local-name>
            <parent-name>[covid19deathincomewise.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total confirmed deaths due to COVID-19 (deaths)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total confirmed deaths due to COVID-19 (deaths)]</local-name>
            <parent-name>[covid19deathincomewise.csv]</parent-name>
            <remote-alias>Total confirmed deaths due to COVID-19 (deaths)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.501479' measure-ordering='alphabetic' measure-percentage='0.498521' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Entity:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID 19 cases income wise line plot</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid19incomewise' name='federated.03b5e8k0ew5ut21b3oq6n11q9s52' />
          </datasources>
          <datasource-dependencies datasource='federated.03b5e8k0ew5ut21b3oq6n11q9s52'>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total confirmed cases of COVID-19 (cases)]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total confirmed cases of COVID-19 (cases)]' derivation='Sum' name='[sum:Total confirmed cases of COVID-19 (cases):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Date:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Dec 31, 2019&quot;</bucket>
              <bucket>&quot;Jan 1, 2020&quot;</bucket>
              <bucket>&quot;Jan 2, 2020&quot;</bucket>
              <bucket>&quot;Jan 3, 2020&quot;</bucket>
              <bucket>&quot;Jan 4, 2020&quot;</bucket>
              <bucket>&quot;Jan 5, 2020&quot;</bucket>
              <bucket>&quot;Jan 6, 2020&quot;</bucket>
              <bucket>&quot;Jan 7, 2020&quot;</bucket>
              <bucket>&quot;Jan 8, 2020&quot;</bucket>
              <bucket>&quot;Jan 9, 2020&quot;</bucket>
              <bucket>&quot;Jan 10, 2020&quot;</bucket>
              <bucket>&quot;Jan 11, 2020&quot;</bucket>
              <bucket>&quot;Jan 12, 2020&quot;</bucket>
              <bucket>&quot;Jan 13, 2020&quot;</bucket>
              <bucket>&quot;Jan 14, 2020&quot;</bucket>
              <bucket>&quot;Jan 15, 2020&quot;</bucket>
              <bucket>&quot;Jan 16, 2020&quot;</bucket>
              <bucket>&quot;Jan 17, 2020&quot;</bucket>
              <bucket>&quot;Jan 18, 2020&quot;</bucket>
              <bucket>&quot;Jan 19, 2020&quot;</bucket>
              <bucket>&quot;Jan 20, 2020&quot;</bucket>
              <bucket>&quot;Jan 21, 2020&quot;</bucket>
              <bucket>&quot;Jan 22, 2020&quot;</bucket>
              <bucket>&quot;Jan 23, 2020&quot;</bucket>
              <bucket>&quot;Jan 24, 2020&quot;</bucket>
              <bucket>&quot;Jan 25, 2020&quot;</bucket>
              <bucket>&quot;Jan 26, 2020&quot;</bucket>
              <bucket>&quot;Jan 27, 2020&quot;</bucket>
              <bucket>&quot;Jan 28, 2020&quot;</bucket>
              <bucket>&quot;Jan 29, 2020&quot;</bucket>
              <bucket>&quot;Jan 30, 2020&quot;</bucket>
              <bucket>&quot;Jan 31, 2020&quot;</bucket>
              <bucket>&quot;Feb 1, 2020&quot;</bucket>
              <bucket>&quot;Feb 2, 2020&quot;</bucket>
              <bucket>&quot;Feb 3, 2020&quot;</bucket>
              <bucket>&quot;Feb 4, 2020&quot;</bucket>
              <bucket>&quot;Feb 5, 2020&quot;</bucket>
              <bucket>&quot;Feb 6, 2020&quot;</bucket>
              <bucket>&quot;Feb 7, 2020&quot;</bucket>
              <bucket>&quot;Feb 8, 2020&quot;</bucket>
              <bucket>&quot;Feb 9, 2020&quot;</bucket>
              <bucket>&quot;Feb 10, 2020&quot;</bucket>
              <bucket>&quot;Feb 11, 2020&quot;</bucket>
              <bucket>&quot;Feb 12, 2020&quot;</bucket>
              <bucket>&quot;Feb 13, 2020&quot;</bucket>
              <bucket>&quot;Feb 14, 2020&quot;</bucket>
              <bucket>&quot;Feb 15, 2020&quot;</bucket>
              <bucket>&quot;Feb 16, 2020&quot;</bucket>
              <bucket>&quot;Feb 17, 2020&quot;</bucket>
              <bucket>&quot;Feb 18, 2020&quot;</bucket>
              <bucket>&quot;Feb 19, 2020&quot;</bucket>
              <bucket>&quot;Feb 20, 2020&quot;</bucket>
              <bucket>&quot;Feb 21, 2020&quot;</bucket>
              <bucket>&quot;Feb 22, 2020&quot;</bucket>
              <bucket>&quot;Feb 23, 2020&quot;</bucket>
              <bucket>&quot;Feb 24, 2020&quot;</bucket>
              <bucket>&quot;Feb 25, 2020&quot;</bucket>
              <bucket>&quot;Feb 26, 2020&quot;</bucket>
              <bucket>&quot;Feb 27, 2020&quot;</bucket>
              <bucket>&quot;Feb 28, 2020&quot;</bucket>
              <bucket>&quot;Feb 29, 2020&quot;</bucket>
              <bucket>&quot;Mar 1, 2020&quot;</bucket>
              <bucket>&quot;Mar 2, 2020&quot;</bucket>
              <bucket>&quot;Mar 3, 2020&quot;</bucket>
              <bucket>&quot;Mar 4, 2020&quot;</bucket>
              <bucket>&quot;Mar 5, 2020&quot;</bucket>
              <bucket>&quot;Mar 6, 2020&quot;</bucket>
              <bucket>&quot;Mar 7, 2020&quot;</bucket>
              <bucket>&quot;Mar 8, 2020&quot;</bucket>
              <bucket>&quot;Mar 9, 2020&quot;</bucket>
              <bucket>&quot;Mar 10, 2020&quot;</bucket>
              <bucket>&quot;Mar 11, 2020&quot;</bucket>
              <bucket>&quot;Mar 12, 2020&quot;</bucket>
              <bucket>&quot;Mar 13, 2020&quot;</bucket>
              <bucket>&quot;Mar 14, 2020&quot;</bucket>
              <bucket>&quot;Mar 15, 2020&quot;</bucket>
              <bucket>&quot;Mar 16, 2020&quot;</bucket>
              <bucket>&quot;Mar 17, 2020&quot;</bucket>
              <bucket>&quot;Mar 18, 2020&quot;</bucket>
              <bucket>&quot;Mar 19, 2020&quot;</bucket>
              <bucket>&quot;Mar 20, 2020&quot;</bucket>
              <bucket>&quot;Mar 21, 2020&quot;</bucket>
              <bucket>&quot;Mar 22, 2020&quot;</bucket>
              <bucket>&quot;Mar 23, 2020&quot;</bucket>
              <bucket>&quot;Mar 24, 2020&quot;</bucket>
              <bucket>&quot;Mar 25, 2020&quot;</bucket>
              <bucket>&quot;Mar 26, 2020&quot;</bucket>
              <bucket>&quot;Mar 27, 2020&quot;</bucket>
              <bucket>&quot;Mar 28, 2020&quot;</bucket>
              <bucket>&quot;Mar 29, 2020&quot;</bucket>
              <bucket>&quot;Mar 30, 2020&quot;</bucket>
              <bucket>&quot;Mar 31, 2020&quot;</bucket>
              <bucket>&quot;Apr 1, 2020&quot;</bucket>
              <bucket>&quot;Apr 2, 2020&quot;</bucket>
              <bucket>&quot;Apr 3, 2020&quot;</bucket>
              <bucket>&quot;Apr 4, 2020&quot;</bucket>
              <bucket>&quot;Apr 5, 2020&quot;</bucket>
              <bucket>&quot;Apr 6, 2020&quot;</bucket>
              <bucket>&quot;Apr 7, 2020&quot;</bucket>
              <bucket>&quot;Apr 8, 2020&quot;</bucket>
              <bucket>&quot;Apr 9, 2020&quot;</bucket>
              <bucket>&quot;Apr 10, 2020&quot;</bucket>
              <bucket>&quot;Apr 11, 2020&quot;</bucket>
              <bucket>&quot;Apr 12, 2020&quot;</bucket>
              <bucket>&quot;Apr 13, 2020&quot;</bucket>
              <bucket>&quot;Apr 14, 2020&quot;</bucket>
              <bucket>&quot;Apr 15, 2020&quot;</bucket>
              <bucket>&quot;Apr 16, 2020&quot;</bucket>
              <bucket>&quot;Apr 17, 2020&quot;</bucket>
              <bucket>&quot;Apr 18, 2020&quot;</bucket>
              <bucket>&quot;Apr 19, 2020&quot;</bucket>
              <bucket>&quot;Apr 20, 2020&quot;</bucket>
              <bucket>&quot;Apr 21, 2020&quot;</bucket>
              <bucket>&quot;Apr 22, 2020&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity:nk]' />
              <text column='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[sum:Total confirmed cases of COVID-19 (cases):qk]</rows>
        <cols>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{554736A8-D336-471A-8DC8-DCBDBEDF1B7B}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID 19 cases income wise area plot</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid19incomewise' name='federated.03b5e8k0ew5ut21b3oq6n11q9s52' />
          </datasources>
          <datasource-dependencies datasource='federated.03b5e8k0ew5ut21b3oq6n11q9s52'>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total confirmed cases of COVID-19 (cases)]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total confirmed cases of COVID-19 (cases)]' derivation='Sum' name='[sum:Total confirmed cases of COVID-19 (cases):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Date:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Dec 31, 2019&quot;</bucket>
              <bucket>&quot;Jan 1, 2020&quot;</bucket>
              <bucket>&quot;Jan 2, 2020&quot;</bucket>
              <bucket>&quot;Jan 3, 2020&quot;</bucket>
              <bucket>&quot;Jan 4, 2020&quot;</bucket>
              <bucket>&quot;Jan 5, 2020&quot;</bucket>
              <bucket>&quot;Jan 6, 2020&quot;</bucket>
              <bucket>&quot;Jan 7, 2020&quot;</bucket>
              <bucket>&quot;Jan 8, 2020&quot;</bucket>
              <bucket>&quot;Jan 9, 2020&quot;</bucket>
              <bucket>&quot;Jan 10, 2020&quot;</bucket>
              <bucket>&quot;Jan 11, 2020&quot;</bucket>
              <bucket>&quot;Jan 12, 2020&quot;</bucket>
              <bucket>&quot;Jan 13, 2020&quot;</bucket>
              <bucket>&quot;Jan 14, 2020&quot;</bucket>
              <bucket>&quot;Jan 15, 2020&quot;</bucket>
              <bucket>&quot;Jan 16, 2020&quot;</bucket>
              <bucket>&quot;Jan 17, 2020&quot;</bucket>
              <bucket>&quot;Jan 18, 2020&quot;</bucket>
              <bucket>&quot;Jan 19, 2020&quot;</bucket>
              <bucket>&quot;Jan 20, 2020&quot;</bucket>
              <bucket>&quot;Jan 21, 2020&quot;</bucket>
              <bucket>&quot;Jan 22, 2020&quot;</bucket>
              <bucket>&quot;Jan 23, 2020&quot;</bucket>
              <bucket>&quot;Jan 24, 2020&quot;</bucket>
              <bucket>&quot;Jan 25, 2020&quot;</bucket>
              <bucket>&quot;Jan 26, 2020&quot;</bucket>
              <bucket>&quot;Jan 27, 2020&quot;</bucket>
              <bucket>&quot;Jan 28, 2020&quot;</bucket>
              <bucket>&quot;Jan 29, 2020&quot;</bucket>
              <bucket>&quot;Jan 30, 2020&quot;</bucket>
              <bucket>&quot;Jan 31, 2020&quot;</bucket>
              <bucket>&quot;Feb 1, 2020&quot;</bucket>
              <bucket>&quot;Feb 2, 2020&quot;</bucket>
              <bucket>&quot;Feb 3, 2020&quot;</bucket>
              <bucket>&quot;Feb 4, 2020&quot;</bucket>
              <bucket>&quot;Feb 5, 2020&quot;</bucket>
              <bucket>&quot;Feb 6, 2020&quot;</bucket>
              <bucket>&quot;Feb 7, 2020&quot;</bucket>
              <bucket>&quot;Feb 8, 2020&quot;</bucket>
              <bucket>&quot;Feb 9, 2020&quot;</bucket>
              <bucket>&quot;Feb 10, 2020&quot;</bucket>
              <bucket>&quot;Feb 11, 2020&quot;</bucket>
              <bucket>&quot;Feb 12, 2020&quot;</bucket>
              <bucket>&quot;Feb 13, 2020&quot;</bucket>
              <bucket>&quot;Feb 14, 2020&quot;</bucket>
              <bucket>&quot;Feb 15, 2020&quot;</bucket>
              <bucket>&quot;Feb 16, 2020&quot;</bucket>
              <bucket>&quot;Feb 17, 2020&quot;</bucket>
              <bucket>&quot;Feb 18, 2020&quot;</bucket>
              <bucket>&quot;Feb 19, 2020&quot;</bucket>
              <bucket>&quot;Feb 20, 2020&quot;</bucket>
              <bucket>&quot;Feb 21, 2020&quot;</bucket>
              <bucket>&quot;Feb 22, 2020&quot;</bucket>
              <bucket>&quot;Feb 23, 2020&quot;</bucket>
              <bucket>&quot;Feb 24, 2020&quot;</bucket>
              <bucket>&quot;Feb 25, 2020&quot;</bucket>
              <bucket>&quot;Feb 26, 2020&quot;</bucket>
              <bucket>&quot;Feb 27, 2020&quot;</bucket>
              <bucket>&quot;Feb 28, 2020&quot;</bucket>
              <bucket>&quot;Feb 29, 2020&quot;</bucket>
              <bucket>&quot;Mar 1, 2020&quot;</bucket>
              <bucket>&quot;Mar 2, 2020&quot;</bucket>
              <bucket>&quot;Mar 3, 2020&quot;</bucket>
              <bucket>&quot;Mar 4, 2020&quot;</bucket>
              <bucket>&quot;Mar 5, 2020&quot;</bucket>
              <bucket>&quot;Mar 6, 2020&quot;</bucket>
              <bucket>&quot;Mar 7, 2020&quot;</bucket>
              <bucket>&quot;Mar 8, 2020&quot;</bucket>
              <bucket>&quot;Mar 9, 2020&quot;</bucket>
              <bucket>&quot;Mar 10, 2020&quot;</bucket>
              <bucket>&quot;Mar 11, 2020&quot;</bucket>
              <bucket>&quot;Mar 12, 2020&quot;</bucket>
              <bucket>&quot;Mar 13, 2020&quot;</bucket>
              <bucket>&quot;Mar 14, 2020&quot;</bucket>
              <bucket>&quot;Mar 15, 2020&quot;</bucket>
              <bucket>&quot;Mar 16, 2020&quot;</bucket>
              <bucket>&quot;Mar 17, 2020&quot;</bucket>
              <bucket>&quot;Mar 18, 2020&quot;</bucket>
              <bucket>&quot;Mar 19, 2020&quot;</bucket>
              <bucket>&quot;Mar 20, 2020&quot;</bucket>
              <bucket>&quot;Mar 21, 2020&quot;</bucket>
              <bucket>&quot;Mar 22, 2020&quot;</bucket>
              <bucket>&quot;Mar 23, 2020&quot;</bucket>
              <bucket>&quot;Mar 24, 2020&quot;</bucket>
              <bucket>&quot;Mar 25, 2020&quot;</bucket>
              <bucket>&quot;Mar 26, 2020&quot;</bucket>
              <bucket>&quot;Mar 27, 2020&quot;</bucket>
              <bucket>&quot;Mar 28, 2020&quot;</bucket>
              <bucket>&quot;Mar 29, 2020&quot;</bucket>
              <bucket>&quot;Mar 30, 2020&quot;</bucket>
              <bucket>&quot;Mar 31, 2020&quot;</bucket>
              <bucket>&quot;Apr 1, 2020&quot;</bucket>
              <bucket>&quot;Apr 2, 2020&quot;</bucket>
              <bucket>&quot;Apr 3, 2020&quot;</bucket>
              <bucket>&quot;Apr 4, 2020&quot;</bucket>
              <bucket>&quot;Apr 5, 2020&quot;</bucket>
              <bucket>&quot;Apr 6, 2020&quot;</bucket>
              <bucket>&quot;Apr 7, 2020&quot;</bucket>
              <bucket>&quot;Apr 8, 2020&quot;</bucket>
              <bucket>&quot;Apr 9, 2020&quot;</bucket>
              <bucket>&quot;Apr 10, 2020&quot;</bucket>
              <bucket>&quot;Apr 11, 2020&quot;</bucket>
              <bucket>&quot;Apr 12, 2020&quot;</bucket>
              <bucket>&quot;Apr 13, 2020&quot;</bucket>
              <bucket>&quot;Apr 14, 2020&quot;</bucket>
              <bucket>&quot;Apr 15, 2020&quot;</bucket>
              <bucket>&quot;Apr 16, 2020&quot;</bucket>
              <bucket>&quot;Apr 17, 2020&quot;</bucket>
              <bucket>&quot;Apr 18, 2020&quot;</bucket>
              <bucket>&quot;Apr 19, 2020&quot;</bucket>
              <bucket>&quot;Apr 20, 2020&quot;</bucket>
              <bucket>&quot;Apr 21, 2020&quot;</bucket>
              <bucket>&quot;Apr 22, 2020&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[sum:Total confirmed cases of COVID-19 (cases):qk]</rows>
        <cols>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{CCA3733F-3A15-4F91-8C8C-D0B6DBDFD8E5}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid19incomewise' name='federated.03b5e8k0ew5ut21b3oq6n11q9s52' />
          </datasources>
          <datasource-dependencies datasource='federated.03b5e8k0ew5ut21b3oq6n11q9s52'>
            <column datatype='string' name='[Date (covid19deathincomewise.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Entity (covid19deathincomewise.csv)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total confirmed deaths due to COVID-19 (deaths)]' role='measure' type='quantitative' />
            <column-instance column='[Date (covid19deathincomewise.csv)]' derivation='None' name='[none:Date (covid19deathincomewise.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity (covid19deathincomewise.csv)]' derivation='None' name='[none:Entity (covid19deathincomewise.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Total confirmed deaths due to COVID-19 (deaths)]' derivation='Sum' name='[sum:Total confirmed deaths due to COVID-19 (deaths):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Date (covid19deathincomewise.csv):nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Dec 31, 2019&quot;</bucket>
              <bucket>&quot;Feb 1, 2020&quot;</bucket>
              <bucket>&quot;Jan 1, 2020&quot;</bucket>
              <bucket>&quot;Jan 2, 2020&quot;</bucket>
              <bucket>&quot;Jan 3, 2020&quot;</bucket>
              <bucket>&quot;Jan 4, 2020&quot;</bucket>
              <bucket>&quot;Jan 5, 2020&quot;</bucket>
              <bucket>&quot;Jan 6, 2020&quot;</bucket>
              <bucket>&quot;Jan 7, 2020&quot;</bucket>
              <bucket>&quot;Jan 8, 2020&quot;</bucket>
              <bucket>&quot;Jan 9, 2020&quot;</bucket>
              <bucket>&quot;Jan 10, 2020&quot;</bucket>
              <bucket>&quot;Jan 11, 2020&quot;</bucket>
              <bucket>&quot;Jan 12, 2020&quot;</bucket>
              <bucket>&quot;Jan 13, 2020&quot;</bucket>
              <bucket>&quot;Jan 14, 2020&quot;</bucket>
              <bucket>&quot;Jan 15, 2020&quot;</bucket>
              <bucket>&quot;Jan 16, 2020&quot;</bucket>
              <bucket>&quot;Jan 17, 2020&quot;</bucket>
              <bucket>&quot;Jan 18, 2020&quot;</bucket>
              <bucket>&quot;Jan 19, 2020&quot;</bucket>
              <bucket>&quot;Jan 20, 2020&quot;</bucket>
              <bucket>&quot;Jan 21, 2020&quot;</bucket>
              <bucket>&quot;Jan 22, 2020&quot;</bucket>
              <bucket>&quot;Jan 23, 2020&quot;</bucket>
              <bucket>&quot;Jan 24, 2020&quot;</bucket>
              <bucket>&quot;Jan 25, 2020&quot;</bucket>
              <bucket>&quot;Jan 26, 2020&quot;</bucket>
              <bucket>&quot;Jan 27, 2020&quot;</bucket>
              <bucket>&quot;Jan 28, 2020&quot;</bucket>
              <bucket>&quot;Jan 29, 2020&quot;</bucket>
              <bucket>&quot;Jan 30, 2020&quot;</bucket>
              <bucket>&quot;Jan 31, 2020&quot;</bucket>
              <bucket>&quot;Feb 2, 2020&quot;</bucket>
              <bucket>&quot;Feb 3, 2020&quot;</bucket>
              <bucket>&quot;Feb 4, 2020&quot;</bucket>
              <bucket>&quot;Feb 5, 2020&quot;</bucket>
              <bucket>&quot;Feb 6, 2020&quot;</bucket>
              <bucket>&quot;Feb 7, 2020&quot;</bucket>
              <bucket>&quot;Feb 8, 2020&quot;</bucket>
              <bucket>&quot;Feb 9, 2020&quot;</bucket>
              <bucket>&quot;Feb 10, 2020&quot;</bucket>
              <bucket>&quot;Feb 11, 2020&quot;</bucket>
              <bucket>&quot;Feb 12, 2020&quot;</bucket>
              <bucket>&quot;Feb 13, 2020&quot;</bucket>
              <bucket>&quot;Feb 14, 2020&quot;</bucket>
              <bucket>&quot;Feb 15, 2020&quot;</bucket>
              <bucket>&quot;Feb 16, 2020&quot;</bucket>
              <bucket>&quot;Feb 17, 2020&quot;</bucket>
              <bucket>&quot;Feb 18, 2020&quot;</bucket>
              <bucket>&quot;Feb 19, 2020&quot;</bucket>
              <bucket>&quot;Feb 20, 2020&quot;</bucket>
              <bucket>&quot;Feb 21, 2020&quot;</bucket>
              <bucket>&quot;Feb 22, 2020&quot;</bucket>
              <bucket>&quot;Feb 23, 2020&quot;</bucket>
              <bucket>&quot;Feb 24, 2020&quot;</bucket>
              <bucket>&quot;Feb 25, 2020&quot;</bucket>
              <bucket>&quot;Feb 26, 2020&quot;</bucket>
              <bucket>&quot;Feb 27, 2020&quot;</bucket>
              <bucket>&quot;Feb 28, 2020&quot;</bucket>
              <bucket>&quot;Feb 29, 2020&quot;</bucket>
              <bucket>&quot;Mar 1, 2020&quot;</bucket>
              <bucket>&quot;Mar 2, 2020&quot;</bucket>
              <bucket>&quot;Mar 3, 2020&quot;</bucket>
              <bucket>&quot;Mar 4, 2020&quot;</bucket>
              <bucket>&quot;Mar 5, 2020&quot;</bucket>
              <bucket>&quot;Mar 6, 2020&quot;</bucket>
              <bucket>&quot;Mar 7, 2020&quot;</bucket>
              <bucket>&quot;Mar 8, 2020&quot;</bucket>
              <bucket>&quot;Mar 9, 2020&quot;</bucket>
              <bucket>&quot;Mar 10, 2020&quot;</bucket>
              <bucket>&quot;Mar 11, 2020&quot;</bucket>
              <bucket>&quot;Mar 12, 2020&quot;</bucket>
              <bucket>&quot;Mar 13, 2020&quot;</bucket>
              <bucket>&quot;Mar 14, 2020&quot;</bucket>
              <bucket>&quot;Mar 15, 2020&quot;</bucket>
              <bucket>&quot;Mar 16, 2020&quot;</bucket>
              <bucket>&quot;Mar 17, 2020&quot;</bucket>
              <bucket>&quot;Mar 18, 2020&quot;</bucket>
              <bucket>&quot;Mar 19, 2020&quot;</bucket>
              <bucket>&quot;Mar 20, 2020&quot;</bucket>
              <bucket>&quot;Mar 21, 2020&quot;</bucket>
              <bucket>&quot;Mar 22, 2020&quot;</bucket>
              <bucket>&quot;Mar 23, 2020&quot;</bucket>
              <bucket>&quot;Mar 24, 2020&quot;</bucket>
              <bucket>&quot;Mar 25, 2020&quot;</bucket>
              <bucket>&quot;Mar 26, 2020&quot;</bucket>
              <bucket>&quot;Mar 27, 2020&quot;</bucket>
              <bucket>&quot;Mar 28, 2020&quot;</bucket>
              <bucket>&quot;Mar 29, 2020&quot;</bucket>
              <bucket>&quot;Mar 30, 2020&quot;</bucket>
              <bucket>&quot;Mar 31, 2020&quot;</bucket>
              <bucket>&quot;Apr 1, 2020&quot;</bucket>
              <bucket>&quot;Apr 2, 2020&quot;</bucket>
              <bucket>&quot;Apr 3, 2020&quot;</bucket>
              <bucket>&quot;Apr 4, 2020&quot;</bucket>
              <bucket>&quot;Apr 5, 2020&quot;</bucket>
              <bucket>&quot;Apr 6, 2020&quot;</bucket>
              <bucket>&quot;Apr 7, 2020&quot;</bucket>
              <bucket>&quot;Apr 8, 2020&quot;</bucket>
              <bucket>&quot;Apr 9, 2020&quot;</bucket>
              <bucket>&quot;Apr 10, 2020&quot;</bucket>
              <bucket>&quot;Apr 11, 2020&quot;</bucket>
              <bucket>&quot;Apr 12, 2020&quot;</bucket>
              <bucket>&quot;Apr 13, 2020&quot;</bucket>
              <bucket>&quot;Apr 14, 2020&quot;</bucket>
              <bucket>&quot;Apr 15, 2020&quot;</bucket>
              <bucket>&quot;Apr 16, 2020&quot;</bucket>
              <bucket>&quot;Apr 17, 2020&quot;</bucket>
              <bucket>&quot;Apr 18, 2020&quot;</bucket>
              <bucket>&quot;Apr 19, 2020&quot;</bucket>
              <bucket>&quot;Apr 20, 2020&quot;</bucket>
              <bucket>&quot;Apr 21, 2020&quot;</bucket>
              <bucket>&quot;Apr 22, 2020&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity (covid19deathincomewise.csv):nk]' />
              <text column='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity (covid19deathincomewise.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[sum:Total confirmed deaths due to COVID-19 (deaths):qk]</rows>
        <cols>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Date (covid19deathincomewise.csv):nk]</cols>
      </table>
      <simple-id uuid='{9B013C7F-68E5-498A-AD3C-73885CBDEFBC}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid19incomewise' name='federated.03b5e8k0ew5ut21b3oq6n11q9s52' />
          </datasources>
          <datasource-dependencies datasource='federated.03b5e8k0ew5ut21b3oq6n11q9s52'>
            <column datatype='string' name='[Date (covid19deathincomewise.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Entity (covid19deathincomewise.csv)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total confirmed deaths due to COVID-19 (deaths)]' role='measure' type='quantitative' />
            <column-instance column='[Date (covid19deathincomewise.csv)]' derivation='None' name='[none:Date (covid19deathincomewise.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity (covid19deathincomewise.csv)]' derivation='None' name='[none:Entity (covid19deathincomewise.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Total confirmed deaths due to COVID-19 (deaths)]' derivation='Sum' name='[sum:Total confirmed deaths due to COVID-19 (deaths):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Date (covid19deathincomewise.csv):nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Dec 31, 2019&quot;</bucket>
              <bucket>&quot;Feb 1, 2020&quot;</bucket>
              <bucket>&quot;Jan 1, 2020&quot;</bucket>
              <bucket>&quot;Jan 2, 2020&quot;</bucket>
              <bucket>&quot;Jan 3, 2020&quot;</bucket>
              <bucket>&quot;Jan 4, 2020&quot;</bucket>
              <bucket>&quot;Jan 5, 2020&quot;</bucket>
              <bucket>&quot;Jan 6, 2020&quot;</bucket>
              <bucket>&quot;Jan 7, 2020&quot;</bucket>
              <bucket>&quot;Jan 8, 2020&quot;</bucket>
              <bucket>&quot;Jan 9, 2020&quot;</bucket>
              <bucket>&quot;Jan 10, 2020&quot;</bucket>
              <bucket>&quot;Jan 11, 2020&quot;</bucket>
              <bucket>&quot;Jan 12, 2020&quot;</bucket>
              <bucket>&quot;Jan 13, 2020&quot;</bucket>
              <bucket>&quot;Jan 14, 2020&quot;</bucket>
              <bucket>&quot;Jan 15, 2020&quot;</bucket>
              <bucket>&quot;Jan 16, 2020&quot;</bucket>
              <bucket>&quot;Jan 17, 2020&quot;</bucket>
              <bucket>&quot;Jan 18, 2020&quot;</bucket>
              <bucket>&quot;Jan 19, 2020&quot;</bucket>
              <bucket>&quot;Jan 20, 2020&quot;</bucket>
              <bucket>&quot;Jan 21, 2020&quot;</bucket>
              <bucket>&quot;Jan 22, 2020&quot;</bucket>
              <bucket>&quot;Jan 23, 2020&quot;</bucket>
              <bucket>&quot;Jan 24, 2020&quot;</bucket>
              <bucket>&quot;Jan 25, 2020&quot;</bucket>
              <bucket>&quot;Jan 26, 2020&quot;</bucket>
              <bucket>&quot;Jan 27, 2020&quot;</bucket>
              <bucket>&quot;Jan 28, 2020&quot;</bucket>
              <bucket>&quot;Jan 29, 2020&quot;</bucket>
              <bucket>&quot;Jan 30, 2020&quot;</bucket>
              <bucket>&quot;Jan 31, 2020&quot;</bucket>
              <bucket>&quot;Feb 2, 2020&quot;</bucket>
              <bucket>&quot;Feb 3, 2020&quot;</bucket>
              <bucket>&quot;Feb 4, 2020&quot;</bucket>
              <bucket>&quot;Feb 5, 2020&quot;</bucket>
              <bucket>&quot;Feb 6, 2020&quot;</bucket>
              <bucket>&quot;Feb 7, 2020&quot;</bucket>
              <bucket>&quot;Feb 8, 2020&quot;</bucket>
              <bucket>&quot;Feb 9, 2020&quot;</bucket>
              <bucket>&quot;Feb 10, 2020&quot;</bucket>
              <bucket>&quot;Feb 11, 2020&quot;</bucket>
              <bucket>&quot;Feb 12, 2020&quot;</bucket>
              <bucket>&quot;Feb 13, 2020&quot;</bucket>
              <bucket>&quot;Feb 14, 2020&quot;</bucket>
              <bucket>&quot;Feb 15, 2020&quot;</bucket>
              <bucket>&quot;Feb 16, 2020&quot;</bucket>
              <bucket>&quot;Feb 17, 2020&quot;</bucket>
              <bucket>&quot;Feb 18, 2020&quot;</bucket>
              <bucket>&quot;Feb 19, 2020&quot;</bucket>
              <bucket>&quot;Feb 20, 2020&quot;</bucket>
              <bucket>&quot;Feb 21, 2020&quot;</bucket>
              <bucket>&quot;Feb 22, 2020&quot;</bucket>
              <bucket>&quot;Feb 23, 2020&quot;</bucket>
              <bucket>&quot;Feb 24, 2020&quot;</bucket>
              <bucket>&quot;Feb 25, 2020&quot;</bucket>
              <bucket>&quot;Feb 26, 2020&quot;</bucket>
              <bucket>&quot;Feb 27, 2020&quot;</bucket>
              <bucket>&quot;Feb 28, 2020&quot;</bucket>
              <bucket>&quot;Feb 29, 2020&quot;</bucket>
              <bucket>&quot;Mar 1, 2020&quot;</bucket>
              <bucket>&quot;Mar 2, 2020&quot;</bucket>
              <bucket>&quot;Mar 3, 2020&quot;</bucket>
              <bucket>&quot;Mar 4, 2020&quot;</bucket>
              <bucket>&quot;Mar 5, 2020&quot;</bucket>
              <bucket>&quot;Mar 6, 2020&quot;</bucket>
              <bucket>&quot;Mar 7, 2020&quot;</bucket>
              <bucket>&quot;Mar 8, 2020&quot;</bucket>
              <bucket>&quot;Mar 9, 2020&quot;</bucket>
              <bucket>&quot;Mar 10, 2020&quot;</bucket>
              <bucket>&quot;Mar 11, 2020&quot;</bucket>
              <bucket>&quot;Mar 12, 2020&quot;</bucket>
              <bucket>&quot;Mar 13, 2020&quot;</bucket>
              <bucket>&quot;Mar 14, 2020&quot;</bucket>
              <bucket>&quot;Mar 15, 2020&quot;</bucket>
              <bucket>&quot;Mar 16, 2020&quot;</bucket>
              <bucket>&quot;Mar 17, 2020&quot;</bucket>
              <bucket>&quot;Mar 18, 2020&quot;</bucket>
              <bucket>&quot;Mar 19, 2020&quot;</bucket>
              <bucket>&quot;Mar 20, 2020&quot;</bucket>
              <bucket>&quot;Mar 21, 2020&quot;</bucket>
              <bucket>&quot;Mar 22, 2020&quot;</bucket>
              <bucket>&quot;Mar 23, 2020&quot;</bucket>
              <bucket>&quot;Mar 24, 2020&quot;</bucket>
              <bucket>&quot;Mar 25, 2020&quot;</bucket>
              <bucket>&quot;Mar 26, 2020&quot;</bucket>
              <bucket>&quot;Mar 27, 2020&quot;</bucket>
              <bucket>&quot;Mar 28, 2020&quot;</bucket>
              <bucket>&quot;Mar 29, 2020&quot;</bucket>
              <bucket>&quot;Mar 30, 2020&quot;</bucket>
              <bucket>&quot;Mar 31, 2020&quot;</bucket>
              <bucket>&quot;Apr 1, 2020&quot;</bucket>
              <bucket>&quot;Apr 2, 2020&quot;</bucket>
              <bucket>&quot;Apr 3, 2020&quot;</bucket>
              <bucket>&quot;Apr 4, 2020&quot;</bucket>
              <bucket>&quot;Apr 5, 2020&quot;</bucket>
              <bucket>&quot;Apr 6, 2020&quot;</bucket>
              <bucket>&quot;Apr 7, 2020&quot;</bucket>
              <bucket>&quot;Apr 8, 2020&quot;</bucket>
              <bucket>&quot;Apr 9, 2020&quot;</bucket>
              <bucket>&quot;Apr 10, 2020&quot;</bucket>
              <bucket>&quot;Apr 11, 2020&quot;</bucket>
              <bucket>&quot;Apr 12, 2020&quot;</bucket>
              <bucket>&quot;Apr 13, 2020&quot;</bucket>
              <bucket>&quot;Apr 14, 2020&quot;</bucket>
              <bucket>&quot;Apr 15, 2020&quot;</bucket>
              <bucket>&quot;Apr 16, 2020&quot;</bucket>
              <bucket>&quot;Apr 17, 2020&quot;</bucket>
              <bucket>&quot;Apr 18, 2020&quot;</bucket>
              <bucket>&quot;Apr 19, 2020&quot;</bucket>
              <bucket>&quot;Apr 20, 2020&quot;</bucket>
              <bucket>&quot;Apr 21, 2020&quot;</bucket>
              <bucket>&quot;Apr 22, 2020&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity (covid19deathincomewise.csv):nk]' />
              <text column='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity (covid19deathincomewise.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[sum:Total confirmed deaths due to COVID-19 (deaths):qk]</rows>
        <cols>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Date (covid19deathincomewise.csv):nk]</cols>
      </table>
      <simple-id uuid='{936E64C2-1AB6-49FB-B656-9C18124E6976}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Date:nk]</field>
            <field>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29F9BA25-06F4-4A41-B298-221E91A9663C}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Date:nk]</field>
            <field>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C45BF96-DF0E-4FA6-93CF-B68717B3EE19}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity (covid19deathincomewise.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Date (covid19deathincomewise.csv):nk]</field>
            <field>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity (covid19deathincomewise.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F31BC68-FA19-4150-8ECD-11CB1990BC6F}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity (covid19deathincomewise.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Date (covid19deathincomewise.csv):nk]</field>
            <field>[federated.03b5e8k0ew5ut21b3oq6n11q9s52].[none:Entity (covid19deathincomewise.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{205B6A68-4E91-48B8-928D-091A99DF5045}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
